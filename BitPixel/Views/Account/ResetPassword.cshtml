@model BitPixel.Common.Account.ResetPasswordViewModel
@{
	ViewBag.Title = "Reset password";
}

<div class="d-flex justify-content-center p-5">
	<div class="card" style="width:100%;min-width:320px;max-width:400px">
		<div class="card-body">
			<h5 class="card-title">Reset Password</h5>
			<h6 class="card-subtitle mb-2 text-muted">Please fill in the form to reset your password.</h6>
			<div>
				@using (Html.BeginForm("ResetPassword", "Account", FormMethod.Post, new { @class = "form-horizontal", role = "form" }))
				{
					@Html.AntiForgeryToken()
					@Html.ValidationSummary("", new { @class = "text-danger" })
					@Html.HiddenFor(model => model.Code)
					<div class="form-group">
						<small>Registered Email Address</small>
						@Html.TextBoxFor(m => m.Email, new { @class = "form-control form-control-sm" })
						@Html.ValidationMessageFor(m => m.Email, "", new { @class = "text-danger" })
					</div>
					<div class="form-group">
						<small>New Password</small>
						@Html.PasswordFor(m => m.Password, new { @class = "form-control form-control-sm" })
						@Html.ValidationMessageFor(m => m.Password, "", new { @class = "text-danger" })
					</div>
					<div class="form-group">
						<small>Confirm New Password</small>
						@Html.PasswordFor(m => m.ConfirmPassword, new { @class = "form-control form-control-sm" })
						@Html.ValidationMessageFor(m => m.ConfirmPassword, "", new { @class = "text-danger" })
					</div>
					<div class="form-group">
						<div class="d-flex justify-content-center">
							@hbehr.recaptcha.ReCaptcha.GetCaptcha()
						</div>
					</div>
					<div class="form-group">
						<input type="submit" class="btn btn-primary w-100" value="Reset Password" />
					</div>
				}
			</div>
		</div>
	</div>
</div>

@section Scripts {
	<script src="~/Scripts/jquery.validate.js"></script>
	<script src="~/Scripts/jquery.validate.unobtrusive.js"></script>
}
