@model DotMatrix.Common.Admin.AdminGameViewModel
@{
	ViewBag.Title = "Game Admin";
}


<div class="d-flex justify-content-between">


	<div class="d-flex w-50" style="min-height: 150px;min-width: 300px;">
		<div class="card w-100 m-3">
			<div class="card-body">
				<div class="d-flex justify-content-between align-items-center">
					<div>
						<h5 class="card-title">Game Management</h5>
						<h6 class="card-subtitle mb-2 text-muted">Create and manage games and prizes</h6>
					</div>
					<div class="w-25">
						<button id="game-create" class="btn btn-primary w-100">Create Game</button>
					</div>
				</div>
				<div>

					<table class="table table-sm table-bordered" style="table-layout:fixed;font-size:13px">
						<thead>
							<tr>
								<th width="60">Id</th>
								<th width="160">Name</th>
								<th>Description</th>
								<th width="50">W</th>
								<th width="50">H</th>
								<th width="100">Type</th>
								<th width="100">Status</th>
								<th width="60">Rank</th>
								<th width="60"></th>
							</tr>

						</thead>
						<tbody>

							@foreach (var game in Model.Games.OrderBy(x => x.Status))
							{
								<tr>
									<td>@game.Id</td>
									<td class="cell-elipsis">@game.Name</td>
									<td class="cell-elipsis">@game.Description</td>
									<td>@game.Width</td>
									<td>@game.Height</td>
									<td>@game.Type</td>
									<td>@game.Status</td>
									<td>@game.Rank</td>
									<td>
										<div class="d-flex justify-content-around align-items-center">
											<i style="cursor:pointer" class="fa fa-edit game-update" data-gameid="@game.Id"></i>
											<i style="cursor:pointer" class="fa fa-image game-fixedimage" data-gameid="@game.Id"></i>
										</div>
									</td>
								</tr>
							}

						</tbody>
					</table>

				</div>
			</div>
		</div>
	</div>

	<div class="d-flex w-50" style="min-height:150px; min-width:300px;">
		<div class="card w-100 m-3">
			<div class="card-body">
				<div class="d-flex justify-content-between align-items-center">
					<div>
						<h5 class="card-title">Prize Management</h5>
						<h6 class="card-subtitle mb-2 text-muted">Create and manage prize pools</h6>
					</div>
					<div class="w-25">
						<button id="game-create-prizepool" class="btn btn-primary w-100">Create Prize Pool</button>
					</div>
				</div>
				<div>

					<table class="table table-sm table-bordered" style="table-layout:fixed;font-size:13px">
						<thead>
							<tr>
								<th width="160">Game</th>
								<th width="180">Name</th>
								<th>Description</th>
								<th width="100">Type</th>
								<th width="40"></th>
							</tr>

						</thead>
						<tbody>

							@foreach (var game in Model.Prizes.Where(x => x.GameStatus != DotMatrix.Enums.GameStatus.Deleted && x.GameStatus != DotMatrix.Enums.GameStatus.Finished))
							{
								<tr>
									<td class="cell-elipsis">@game.Game</td>
									<td class="cell-elipsis">@game.Name</td>
									<td class="cell-elipsis">@game.Description</td>
									<td>@game.Type</td>
									<th class="text-center">
										<i class="fa fa-edit game-update-prizepool" data-gameid="@game.GameId" data-name="@game.Name"></i>
									</th>
								</tr>
							}

						</tbody>
					</table>

				</div>
			</div>
		</div>
	</div>


</div>

@section Scripts {
	<script>
		(async ($) => {

			$("#game-create-prizepool").on("click", async function () {
				const result = await openModalGet("/Admin/CreatePrizePoolModal");
				if (result.Cancel === true) {
					return;
				}
				location.reload();
			});

			$(".game-update-prizepool").on("click", async function () {
				const name = $(this).data("name");
				const gameId = $(this).data("gameid");
				const result = await openModalGet("/Admin/UpdatePrizePoolModal", { gameId: gameId, name: name });
				if (result.Cancel === true) {
					return;
				}
				location.reload();
			});


			$("#game-create").on("click", async function () {
				const result = await openModalGet("/Admin/CreateGameModal");
				if (result.Cancel === true) {
					return;
				}
				location.reload();
			});

			$(".game-update").on("click", async function () {
				const gameId = $(this).data("gameid");
				const result = await openModalGet("/Admin/UpdateGameModal", { gameId: gameId });
				if (result.Cancel === true) {
					return;
				}
				location.reload();
			});

			$(".game-fixedimage").on("click", async function () {
				const gameId = $(this).data("gameid");
				const result = await openModalGet("/Admin/CreateFixedImageModal", { gameId: gameId });
				if (result.Cancel === true) {
					return;
				}
			});

		})(jQuery);
	</script>
}