//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace DotMatrix.Core.Cryptopia.QueueService {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="SubmitPixelRequest", Namespace="http://schemas.datacontract.org/2004/07/Cryptopia.QueueService.DataObjects")]
    [System.SerializableAttribute()]
    public partial class SubmitPixelRequest : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool IsApiField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private DotMatrix.Core.Cryptopia.QueueService.PixelItem PixelField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string UserIdField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsApi {
            get {
                return this.IsApiField;
            }
            set {
                if ((this.IsApiField.Equals(value) != true)) {
                    this.IsApiField = value;
                    this.RaisePropertyChanged("IsApi");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public DotMatrix.Core.Cryptopia.QueueService.PixelItem Pixel {
            get {
                return this.PixelField;
            }
            set {
                if ((object.ReferenceEquals(this.PixelField, value) != true)) {
                    this.PixelField = value;
                    this.RaisePropertyChanged("Pixel");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string UserId {
            get {
                return this.UserIdField;
            }
            set {
                if ((object.ReferenceEquals(this.UserIdField, value) != true)) {
                    this.UserIdField = value;
                    this.RaisePropertyChanged("UserId");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="PixelItem", Namespace="http://schemas.datacontract.org/2004/07/Cryptopia.QueueService.DataObjects")]
    [System.SerializableAttribute()]
    public partial class PixelItem : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private byte BField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private byte GField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private byte RField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int XField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int YField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public byte B {
            get {
                return this.BField;
            }
            set {
                if ((this.BField.Equals(value) != true)) {
                    this.BField = value;
                    this.RaisePropertyChanged("B");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public byte G {
            get {
                return this.GField;
            }
            set {
                if ((this.GField.Equals(value) != true)) {
                    this.GField = value;
                    this.RaisePropertyChanged("G");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public byte R {
            get {
                return this.RField;
            }
            set {
                if ((this.RField.Equals(value) != true)) {
                    this.RField = value;
                    this.RaisePropertyChanged("R");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int X {
            get {
                return this.XField;
            }
            set {
                if ((this.XField.Equals(value) != true)) {
                    this.XField = value;
                    this.RaisePropertyChanged("X");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Y {
            get {
                return this.YField;
            }
            set {
                if ((this.YField.Equals(value) != true)) {
                    this.YField = value;
                    this.RaisePropertyChanged("Y");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="SubmitPixelResponse", Namespace="http://schemas.datacontract.org/2004/07/Cryptopia.QueueService.DataObjects")]
    [System.SerializableAttribute()]
    public partial class SubmitPixelResponse : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string MessageField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool SuccessField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Message {
            get {
                return this.MessageField;
            }
            set {
                if ((object.ReferenceEquals(this.MessageField, value) != true)) {
                    this.MessageField = value;
                    this.RaisePropertyChanged("Message");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool Success {
            get {
                return this.SuccessField;
            }
            set {
                if ((this.SuccessField.Equals(value) != true)) {
                    this.SuccessField = value;
                    this.RaisePropertyChanged("Success");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="SubmitPixelsRequest", Namespace="http://schemas.datacontract.org/2004/07/Cryptopia.QueueService.DataObjects")]
    [System.SerializableAttribute()]
    public partial class SubmitPixelsRequest : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool IsApiField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Collections.Generic.List<DotMatrix.Core.Cryptopia.QueueService.PixelItem> PixelsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string UserIdField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsApi {
            get {
                return this.IsApiField;
            }
            set {
                if ((this.IsApiField.Equals(value) != true)) {
                    this.IsApiField = value;
                    this.RaisePropertyChanged("IsApi");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.Generic.List<DotMatrix.Core.Cryptopia.QueueService.PixelItem> Pixels {
            get {
                return this.PixelsField;
            }
            set {
                if ((object.ReferenceEquals(this.PixelsField, value) != true)) {
                    this.PixelsField = value;
                    this.RaisePropertyChanged("Pixels");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string UserId {
            get {
                return this.UserIdField;
            }
            set {
                if ((object.ReferenceEquals(this.UserIdField, value) != true)) {
                    this.UserIdField = value;
                    this.RaisePropertyChanged("UserId");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="SubmitPixelsResponse", Namespace="http://schemas.datacontract.org/2004/07/Cryptopia.QueueService.DataObjects")]
    [System.SerializableAttribute()]
    public partial class SubmitPixelsResponse : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string MessageField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool SuccessField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Message {
            get {
                return this.MessageField;
            }
            set {
                if ((object.ReferenceEquals(this.MessageField, value) != true)) {
                    this.MessageField = value;
                    this.RaisePropertyChanged("Message");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool Success {
            get {
                return this.SuccessField;
            }
            set {
                if ((this.SuccessField.Equals(value) != true)) {
                    this.SuccessField = value;
                    this.RaisePropertyChanged("Success");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="Cryptopia.QueueService.IQueueProcessor")]
    public interface IQueueProcessor {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IQueueProcessor/SubmitPixel", ReplyAction="http://tempuri.org/IQueueProcessor/SubmitPixelResponse")]
        DotMatrix.Core.Cryptopia.QueueService.SubmitPixelResponse SubmitPixel(DotMatrix.Core.Cryptopia.QueueService.SubmitPixelRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IQueueProcessor/SubmitPixel", ReplyAction="http://tempuri.org/IQueueProcessor/SubmitPixelResponse")]
        System.Threading.Tasks.Task<DotMatrix.Core.Cryptopia.QueueService.SubmitPixelResponse> SubmitPixelAsync(DotMatrix.Core.Cryptopia.QueueService.SubmitPixelRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IQueueProcessor/SubmitPixels", ReplyAction="http://tempuri.org/IQueueProcessor/SubmitPixelsResponse")]
        DotMatrix.Core.Cryptopia.QueueService.SubmitPixelsResponse SubmitPixels(DotMatrix.Core.Cryptopia.QueueService.SubmitPixelsRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IQueueProcessor/SubmitPixels", ReplyAction="http://tempuri.org/IQueueProcessor/SubmitPixelsResponse")]
        System.Threading.Tasks.Task<DotMatrix.Core.Cryptopia.QueueService.SubmitPixelsResponse> SubmitPixelsAsync(DotMatrix.Core.Cryptopia.QueueService.SubmitPixelsRequest request);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IQueueProcessorChannel : DotMatrix.Core.Cryptopia.QueueService.IQueueProcessor, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class QueueProcessorClient : System.ServiceModel.ClientBase<DotMatrix.Core.Cryptopia.QueueService.IQueueProcessor>, DotMatrix.Core.Cryptopia.QueueService.IQueueProcessor {
        
        public QueueProcessorClient() {
        }
        
        public QueueProcessorClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public QueueProcessorClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public QueueProcessorClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public QueueProcessorClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public DotMatrix.Core.Cryptopia.QueueService.SubmitPixelResponse SubmitPixel(DotMatrix.Core.Cryptopia.QueueService.SubmitPixelRequest request) {
            return base.Channel.SubmitPixel(request);
        }
        
        public System.Threading.Tasks.Task<DotMatrix.Core.Cryptopia.QueueService.SubmitPixelResponse> SubmitPixelAsync(DotMatrix.Core.Cryptopia.QueueService.SubmitPixelRequest request) {
            return base.Channel.SubmitPixelAsync(request);
        }
        
        public DotMatrix.Core.Cryptopia.QueueService.SubmitPixelsResponse SubmitPixels(DotMatrix.Core.Cryptopia.QueueService.SubmitPixelsRequest request) {
            return base.Channel.SubmitPixels(request);
        }
        
        public System.Threading.Tasks.Task<DotMatrix.Core.Cryptopia.QueueService.SubmitPixelsResponse> SubmitPixelsAsync(DotMatrix.Core.Cryptopia.QueueService.SubmitPixelsRequest request) {
            return base.Channel.SubmitPixelsAsync(request);
        }
    }
}
